name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: npm ci
      - name: Process Tailwind CSS
        run: npx tailwindcss -i ./src/app/globals.css -o ./public/styles.css --minify
      - name: Build with Next.js
        run: npm run build
        env:
          # Add basePath to ensure assets load properly
          NEXT_PUBLIC_BASE_PATH: /devio
      - name: Handle CNAME file
        run: |
          if [ -f "public/CNAME" ]; then
            cp public/CNAME out/
          fi
      - name: Copy public CSS to output directory
        run: |
          mkdir -p out/_next/static/css
          cp public/styles.css out/_next/static/css/app.css
      - name: Create .nojekyll file
        run: touch out/.nojekyll
      - name: Fix static asset paths
        run: |
          find out -type f -name "*.html" -exec sed -i 's|href="/_next/|href="/devio/_next/|g' {} \;
          find out -type f -name "*.html" -exec sed -i 's|src="/_next/|src="/devio/_next/|g' {} \;
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 