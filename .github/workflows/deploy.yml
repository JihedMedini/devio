name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: npm ci
      - name: Clean previous builds
        run: |
          rm -rf .next
          rm -rf out
      - name: Build with Next.js
        run: npm run build
        env:
          # Add basePath to ensure assets load properly
          NEXT_PUBLIC_BASE_PATH: /devio
      - name: Handle CNAME file
        run: |
          if [ -f "public/CNAME" ]; then
            # Copy CNAME to the root output directory
            cp public/CNAME out/
          fi
      - name: Create .nojekyll file
        run: touch out/.nojekyll
      - name: Copy index.html and 404.html to root
        run: |
          # Copy the index.html and 404.html to the root directory
          cp public/index.html out/
          cp public/404.html out/
      - name: Fix static asset paths - improved
        run: |
          # More comprehensive path fixes
          find out -type f -name "*.html" -exec sed -i 's|href="/_next/|href="/devio/_next/|g' {} \;
          find out -type f -name "*.html" -exec sed -i 's|src="/_next/|src="/devio/_next/|g' {} \;
          
          # Handle additional path issues in JS files
          find out/_next/static -type f -name "*.js" -exec sed -i 's|"/_next/static/|"/devio/_next/static/|g' {} \;
          
          # Fix references to images and other assets
          find out -type f -name "*.js" -exec sed -i 's|src:"/|src:"/devio/|g' {} \;
          find out -type f -name "*.js" -exec sed -i 's|src="/|src="/devio/|g' {} \;
          find out -type f -name "*.js" -exec sed -i 's|href="/|href="/devio/|g' {} \;
          
          # Make sure all JSON data with paths are correctly updated
          find out -type f -name "*.js" -exec sed -i 's|"url":"/|"url":"/devio/|g' {} \;
          
          echo "Fixed paths in HTML and JS files"
          
      - name: Extract CSS filename and ensure it's loaded
        run: |
          # Find the generated CSS filename
          CSS_FILE=$(find out/_next/static/css -name "*.css" | head -n 1)
          if [ -n "$CSS_FILE" ]; then
            CSS_FILENAME=$(basename "$CSS_FILE")
            # Add explicit CSS link to all HTML files if not already present
            find out -type f -name "*.html" -exec sed -i "s|</head>|<link rel=\"stylesheet\" href=\"/devio/_next/static/css/$CSS_FILENAME\" />\n</head>|g" {} \;
            echo "Added CSS link for $CSS_FILENAME to HTML files"
          else
            echo "Warning: No CSS file found in out/_next/static/css"
          fi
          
      - name: Copy static assets to devio directory for backward compatibility
        run: |
          # Create devio directory to ensure old paths still work
          mkdir -p out/devio
          
          # Create a minimal index.html in the devio folder that redirects to main app
          cat << EOF > out/devio/index.html
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Redirecting...</title>
            <meta http-equiv="refresh" content="0;url=/">
            <script>window.location.href = '/';</script>
          </head>
          <body>
            <p>Redirecting to main app...</p>
          </body>
          </html>
          EOF
          
          echo "Created compatibility redirects"
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 